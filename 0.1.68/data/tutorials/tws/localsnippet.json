{"schemaVersion":{"minor":3,"patch":0,"major":0},"identifier":{"url":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet","interfaceLanguage":"swift"},"kind":"project","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/tws\/localsnippet"]}],"hierarchy":{"paths":[["doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet"],["doc:\/\/tws-ios.TWS\/documentation\/TWS"]],"modules":[{"projects":[{"sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/GettingStarted#Connect-with-the-TWS-portal","kind":"task"},{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/GettingStarted#Presenting-snippets","kind":"task"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/GettingStarted"},{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet","sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet#Displaying-a-Snippet","kind":"task"}]},{"sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch#Mix-Match","kind":"task"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents"},"metadata":{"title":"Use snippets locally","category":"Learn to use the SDK","categoryPathComponent":"Tutorial-Table-of-Contents","role":"project"},"sections":[{"kind":"hero","title":"Use snippets locally","estimatedTimeInMinutes":2,"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Learn how to work with TWS snippets locally without connecting to our backend service. This tutorial will guide you through the steps to display a webpage snippet in your app, bypassing the backend, and focusing solely on rendering and showcasing the snippet content."}]}],"chapter":"Display your first snippet"},{"tasks":[{"title":"Displaying a Snippet","anchor":"Displaying-a-Snippet","stepsSection":[{"type":"step","caption":[],"media":null,"code":"LocalSnippet_00.swift","content":[{"inlineContent":[{"text":"Create a local instance of a snippet.","type":"text"}],"type":"paragraph"}],"runtimePreview":null},{"caption":[],"type":"step","runtimePreview":null,"content":[{"type":"paragraph","inlineContent":[{"text":"When needed, modify the URL of a snippet directly.","type":"text"}]}],"code":"LocalSnippet_01.swift","media":null},{"runtimePreview":null,"content":[{"inlineContent":[{"text":"If you want to attach headers to the request, set them by modifying the ","type":"text"},{"type":"codeVoice","code":"headers"},{"type":"text","text":" parameter."}],"type":"paragraph"}],"media":null,"caption":[],"type":"step","code":"LocalSnippet_02.swift"},{"runtimePreview":null,"code":"LocalSnippet_03.swift","type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"If you want to use ","type":"text"},{"type":"reference","identifier":"https:\/\/mustache.github.io\/mustache.5.html","isActive":true},{"text":" processing, first change the engine to Mustache and then add the variables.","type":"text"}]}],"caption":[],"media":null},{"runtimePreview":null,"caption":[],"type":"step","content":[{"inlineContent":[{"text":"Displaying a local snippet is as simple as rendering it in a ","type":"text"},{"type":"codeVoice","code":"TWSView"},{"text":".","type":"text"}],"type":"paragraph"}],"media":null,"code":"LocalSnippet_04.swift"}],"contentSection":[{"kind":"contentAndMedia","content":[{"inlineContent":[{"text":"In this section, you’ll learn how to create a TWS snippet for local use. We’ll guide you through defining the snippet’s essential properties, such as target URL, and any custom properties or headers required for rendering. By the end of this section, you’ll have a fully configured snippet ready to display.","type":"text"}],"type":"paragraph"}],"mediaPosition":"trailing"}]}],"kind":"tasks"},{"kind":"callToAction","title":"Combine remote and local snippets","abstract":[{"type":"text","text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, you’ll need to follow specific rules and best practices."}],"action":{"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch","overridingTitleInlineContent":[{"type":"text","text":"Get started"}],"isActive":true,"type":"reference","overridingTitle":"Get started"},"featuredEyebrow":"Tutorial"}],"references":{"LocalSnippet_04.swift":{"fileType":"swift","identifier":"LocalSnippet_04.swift","content":["import SwiftUI","import Foundation","import TWS","","struct HomeView: View {","","    var body: some View {","        ZStack {","            SnippetView(","                snippet: localSnippet()","            )","        }","    }","","    \/\/ A local instance of a snippet","    private func localSnippet() -> TWSSnippet {","        var snippet = TWSSnippet(","            id: \"xyz\",","            target: URL(string: \"https:\/\/www.google.com\")!","        )","","        snippet.target = URL(string: \"https:\/\/duckduckgo.com\/\")!","","        snippet.headers = [","            \"header1\": \"value1\"","        ]","","        snippet.engine = .mustache","","        snippet.props = .dictionary([","            \"name\": .string(\"John\"),","            \"age\": .int(25)","        ])","","        return snippet","    }","}"],"type":"file","highlights":[{"line":9},{"line":10},{"line":11}],"syntax":"swift","fileName":"HomeView.swift"},"LocalSnippet_02.swift":{"highlights":[{"line":22},{"line":23},{"line":24},{"line":25}],"syntax":"swift","fileType":"swift","fileName":"HomeView.swift","type":"file","identifier":"LocalSnippet_02.swift","content":["import SwiftUI","import Foundation","import TWS","","struct HomeView: View {","","    var body: some View {","        ZStack {","","        }","    }","","    \/\/ A local instance of a snippet","    private func localSnippet() -> TWSSnippet {","        var snippet = TWSSnippet(","            id: \"xyz\",","            target: URL(string: \"https:\/\/www.google.com\")!","        )","","        snippet.target = URL(string: \"https:\/\/duckduckgo.com\/\")!","","        snippet.headers = [","            \"header1\": \"value1\"","        ]","","        return snippet","    }","}"]},"doc://tws-ios.TWS/tutorials/TWS/GettingStarted":{"type":"topic","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/GettingStarted","kind":"project","url":"\/tutorials\/tws\/gettingstarted","title":"Display your first snippet","estimatedTime":"3min","role":"project","abstract":[{"text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views.","type":"text"}]},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents":{"title":"Getting Started","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents","role":"overview","url":"\/tutorials\/tutorial-table-of-contents","kind":"overview","abstract":[{"type":"text","text":"Follow the tutorials to learn how to use the SDK for displaying snippets."}],"type":"topic"},"LocalSnippet_00.swift":{"type":"file","fileType":"swift","identifier":"LocalSnippet_00.swift","fileName":"HomeView.swift","syntax":"swift","highlights":[],"content":["import SwiftUI","import Foundation","import TWS","","struct HomeView: View {","","    var body: some View {","        ZStack {","","        }","    }","","    \/\/ A local instance of a snippet","    private func localSnippet() -> TWSSnippet {","        var snippet = TWSSnippet(","            id: \"xyz\",","            target: URL(string: \"https:\/\/www.google.com\")!","        )","","        return snippet","    }","}"]},"doc://tws-ios.TWS/tutorials/TWS/GettingStarted#Connect-with-the-TWS-portal":{"abstract":[{"type":"text","text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views."}],"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/GettingStarted#Connect-with-the-TWS-portal","type":"section","role":"pseudoSymbol","url":"\/tutorials\/tws\/gettingstarted#Connect-with-the-TWS-portal","kind":"section","title":"Connect with the TWS portal"},"doc://tws-ios.TWS/tutorials/TWS/MixAndMatch#Mix-Match":{"type":"section","role":"pseudoSymbol","abstract":[{"type":"text","text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, you’ll need to follow specific rules and best practices."}],"url":"\/tutorials\/tws\/mixandmatch#Mix-Match","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch#Mix-Match","kind":"section","title":"Mix & Match"},"doc://tws-ios.TWS/tutorials/TWS/LocalSnippet":{"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet","role":"project","type":"topic","title":"Use snippets locally","estimatedTime":"2min","url":"\/tutorials\/tws\/localsnippet","kind":"project","abstract":[{"type":"text","text":"Learn how to work with TWS snippets locally without connecting to our backend service. This tutorial will guide you through the steps to display a webpage snippet in your app, bypassing the backend, and focusing solely on rendering and showcasing the snippet content."}]},"LocalSnippet_03.swift":{"highlights":[{"line":26},{"line":27},{"line":28},{"line":29},{"line":30},{"line":31},{"line":32}],"syntax":"swift","fileType":"swift","fileName":"HomeView.swift","type":"file","identifier":"LocalSnippet_03.swift","content":["import SwiftUI","import Foundation","import TWS","","struct HomeView: View {","","    var body: some View {","        ZStack {","","        }","    }","","    \/\/ A local instance of a snippet","    private func localSnippet() -> TWSSnippet {","        var snippet = TWSSnippet(","            id: \"xyz\",","            target: URL(string: \"https:\/\/www.google.com\")!","        )","","        snippet.target = URL(string: \"https:\/\/duckduckgo.com\/\")!","","        snippet.headers = [","            \"header1\": \"value1\"","        ]","","        snippet.engine = .mustache","","        snippet.props = .dictionary([","            \"name\": .string(\"John\"),","            \"age\": .int(25)","        ])","","        return snippet","    }","}"]},"https://mustache.github.io/mustache.5.html":{"url":"https:\/\/mustache.github.io\/mustache.5.html","title":"Mustache","type":"link","titleInlineContent":[{"type":"text","text":"Mustache"}],"identifier":"https:\/\/mustache.github.io\/mustache.5.html"},"LocalSnippet_01.swift":{"highlights":[{"line":20},{"line":21}],"syntax":"swift","fileType":"swift","fileName":"HomeView.swift","type":"file","identifier":"LocalSnippet_01.swift","content":["import SwiftUI","import Foundation","import TWS","","struct HomeView: View {","","    var body: some View {","        ZStack {","","        }","    }","","    \/\/ A local instance of a snippet","    private func localSnippet() -> TWSSnippet {","        var snippet = TWSSnippet(","            id: \"xyz\",","            target: URL(string: \"https:\/\/www.google.com\")!","        )","","        snippet.target = URL(string: \"https:\/\/duckduckgo.com\/\")!","","        return snippet","    }","}"]},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents/Display-your-first-snippet":{"type":"topic","role":"article","abstract":[],"url":"\/tutorials\/tutorial-table-of-contents\/display-your-first-snippet","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet","kind":"article","title":"Display your first snippet"},"doc://tws-ios.TWS/tutorials/TWS/LocalSnippet#Displaying-a-Snippet":{"abstract":[{"type":"text","text":"Learn how to work with TWS snippets locally without connecting to our backend service. This tutorial will guide you through the steps to display a webpage snippet in your app, bypassing the backend, and focusing solely on rendering and showcasing the snippet content."}],"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet#Displaying-a-Snippet","type":"section","role":"pseudoSymbol","url":"\/tutorials\/tws\/localsnippet#Displaying-a-Snippet","kind":"section","title":"Displaying a Snippet"},"doc://tws-ios.TWS/tutorials/TWS/GettingStarted#Presenting-snippets":{"abstract":[{"type":"text","text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views."}],"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/GettingStarted#Presenting-snippets","type":"section","role":"pseudoSymbol","url":"\/tutorials\/tws\/gettingstarted#Presenting-snippets","kind":"section","title":"Presenting snippets"},"doc://tws-ios.TWS/tutorials/TWS/MixAndMatch":{"type":"topic","role":"project","estimatedTime":"5min","abstract":[{"type":"text","text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, you’ll need to follow specific rules and best practices."}],"url":"\/tutorials\/tws\/mixandmatch","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch","kind":"project","title":"Combine remote and local snippets"}}}