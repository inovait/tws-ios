{"metadata":{"role":"project","category":"Learn to use the SDK","title":"Combine remote and local snippets","categoryPathComponent":"Tutorial-Table-of-Contents"},"variants":[{"paths":["\/tutorials\/tws\/mixandmatch"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"project","hierarchy":{"modules":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet","projects":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/GettingStarted","sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/GettingStarted#Connect-with-the-TWS-portal","kind":"task"},{"kind":"task","reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/GettingStarted#Presenting-snippets"}]},{"sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet#Displaying-a-Snippet","kind":"task"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet"},{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch","sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch#Mix-Match","kind":"task"}]}]}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents","paths":[["doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet"],["doc:\/\/tws-ios.TWS\/documentation\/TWS"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch"},"sections":[{"content":[{"inlineContent":[{"type":"text","text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, you’ll need to follow specific rules and best practices."}],"type":"paragraph"},{"style":"note","name":"Note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"If you are exclusively using either remote or local handling for snippets, these additional considerations are not necessary.","type":"text"}]}]}],"chapter":"Display your first snippet","title":"Combine remote and local snippets","estimatedTimeInMinutes":5,"kind":"hero"},{"tasks":[{"stepsSection":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Start by enabling TWS by providing the Project identifiers."}]}],"caption":[],"runtimePreview":null,"code":"MixAndMatch_00.swift","media":null,"type":"step"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Show all of the remote snippets in the "},{"type":"codeVoice","code":"TabView"},{"text":".","type":"text"}]}],"media":null,"runtimePreview":null,"caption":[],"type":"step","code":"MixAndMatch_01.swift"},{"caption":[],"type":"step","code":"MixAndMatch_02.swift","media":null,"content":[{"type":"paragraph","inlineContent":[{"text":"Now, let’s imagine there is a developer tool hosted on a specific site that allows us to control a snippet, but this tool is not returned from the server. In this case, we can pair the snippet with the developer tool by displaying them side-by-side. This approach allows developers to interact with and control the snippet in real time while viewing it within the application.","type":"text"}]}],"runtimePreview":null},{"content":[{"inlineContent":[{"text":"Because the manager is injected into the view and all its ancestor views, the SDK assumes that the snippet should be handled in correspondence with the remotely hosted snippet. To override this behavior, we need to explicitly inform the system that we are taking over from this point forward.","type":"text"}],"type":"paragraph"}],"media":null,"caption":[{"type":"aside","name":"Note","content":[{"type":"paragraph","inlineContent":[{"text":"Once you take over, all ancestor views are treated as local snippets. If you need to use remote snippets again, you must call ","type":"text"},{"code":".twsLocal(false)","type":"codeVoice"},{"type":"text","text":" to restore the default behavior."}]}],"style":"note"}],"runtimePreview":null,"code":"MixAndMatch_03.swift","type":"step"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, if we want to use remote snippets again, we’ll need to switch back to remote handling."}]}],"caption":[],"media":null,"code":"MixAndMatch_04.swift","runtimePreview":null,"type":"step"}],"title":"Mix & Match","contentSection":[{"kind":"contentAndMedia","mediaPosition":"trailing","content":[{"inlineContent":[{"type":"text","text":"Let’s begin by displaying a few remote snippets, then integrate some local snippets, and finally switch back to remote ones."}],"type":"paragraph"}]}],"anchor":"Mix-Match"}],"kind":"tasks"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://tws-ios.TWS/tutorials/TWS/LocalSnippet#Displaying-a-Snippet":{"type":"section","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/tws\/localsnippet#Displaying-a-Snippet","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet#Displaying-a-Snippet","title":"Displaying a Snippet","abstract":[{"type":"text","text":"Learn how to work with TWS snippets locally without connecting to our backend service. This tutorial will guide you through the steps to display a webpage snippet in your app, bypassing the backend, and focusing solely on rendering and showcasing the snippet content."}]},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents/Display-your-first-snippet":{"abstract":[],"type":"topic","kind":"article","role":"article","title":"Display your first snippet","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet","url":"\/tutorials\/tutorial-table-of-contents\/display-your-first-snippet"},"doc://tws-ios.TWS/tutorials/TWS/MixAndMatch":{"role":"project","kind":"project","abstract":[{"text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, you’ll need to follow specific rules and best practices.","type":"text"}],"type":"topic","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch","title":"Combine remote and local snippets","url":"\/tutorials\/tws\/mixandmatch","estimatedTime":"5min"},"doc://tws-ios.TWS/tutorials/TWS/GettingStarted#Presenting-snippets":{"abstract":[{"type":"text","text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views."}],"type":"section","kind":"section","role":"pseudoSymbol","title":"Presenting snippets","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/GettingStarted#Presenting-snippets","url":"\/tutorials\/tws\/gettingstarted#Presenting-snippets"},"doc://tws-ios.TWS/tutorials/TWS/LocalSnippet":{"kind":"project","url":"\/tutorials\/tws\/localsnippet","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet","type":"topic","role":"project","estimatedTime":"2min","abstract":[{"text":"Learn how to work with TWS snippets locally without connecting to our backend service. This tutorial will guide you through the steps to display a webpage snippet in your app, bypassing the backend, and focusing solely on rendering and showcasing the snippet content.","type":"text"}],"title":"Use snippets locally"},"doc://tws-ios.TWS/tutorials/TWS/GettingStarted":{"role":"project","kind":"project","abstract":[{"text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views.","type":"text"}],"type":"topic","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/GettingStarted","title":"Display your first snippet","url":"\/tutorials\/tws\/gettingstarted","estimatedTime":"3min"},"MixAndMatch_02.swift":{"content":["import SwiftUI","import TWS","","struct HomeView: View {","","    @Environment(TWSManager.self) var tws","","    var  body: some View {","        TabView {","            ForEach(tws.snippets()) { snippet in","                RemoteSnippetTab(snippet: snippet)","            }","        }","    }","}","","struct RemoteSnippetTab: View {","","    let snippet: TWSSnippet","","    var body: some View {","        VStack {","            TWSView(snippet: snippet)","","            DevelopmentView(id: snippet.id)","        }","    }","}","","struct DevelopmentView: View {","","    let id: String","","    var body: some View {","        TWSView(","            \/\/ A local snippet","            snippet: .init(","                id: id,","                target: URL(string: \"https:\/\/dev.tws.io?id=\\(id)\")","            )","        )","    }","}"],"identifier":"MixAndMatch_02.swift","fileName":"HomeView.swift","highlights":[{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43}],"syntax":"swift","type":"file","fileType":"swift"},"doc://tws-ios.TWS/tutorials/TWS/GettingStarted#Connect-with-the-TWS-portal":{"abstract":[{"type":"text","text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views."}],"type":"section","kind":"section","role":"pseudoSymbol","title":"Connect with the TWS portal","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/GettingStarted#Connect-with-the-TWS-portal","url":"\/tutorials\/tws\/gettingstarted#Connect-with-the-TWS-portal"},"MixAndMatch_04.swift":{"identifier":"MixAndMatch_04.swift","content":["import SwiftUI","import TWS","","struct HomeView: View {","","    @Environment(TWSManager.self) var tws","","    var  body: some View {","        TabView {","            ForEach(tws.snippets()) { snippet in","                RemoteSnippetTab(snippet: snippet)","            }","        }","    }","}","","struct RemoteSnippetTab: View {","","    let snippet: TWSSnippet","","    var body: some View {","        VStack {","            TWSView(snippet: snippet)","","            DevelopmentView(id: snippet.id)","                .twsLocal()","        }","    }","}","","struct DevelopmentView: View {","","    let id: String","","    var body: some View {","        TWSView(","            \/\/ A local snippet","            snippet: .init(","                id: id,","                target: URL(string: \"https:\/\/dev.tws.io?id=\\(id)\")","            )","        )","","        \/\/ Some view where we want to use remote snippets again","        SomeView()","            .twsLocal(false)","    }","}"],"fileType":"swift","fileName":"HomeView.swift","type":"file","syntax":"swift","highlights":[{"line":43},{"line":44},{"line":45},{"line":46}]},"MixAndMatch_01.swift":{"content":["import SwiftUI","import TWS","","struct HomeView: View {","","    @Environment(TWSManager.self) var tws","","    var  body: some View {","        TabView {","            ForEach(tws.snippets()) { snippet in","                RemoteSnippetTab(snippet: snippet)","            }","        }","    }","}","","struct RemoteSnippetTab: View {","","    let snippet: TWSSnippet","","    var body: some View {","        TWSView(snippet: snippet)","    }","}"],"identifier":"MixAndMatch_01.swift","fileName":"HomeView.swift","highlights":[],"syntax":"swift","type":"file","fileType":"swift"},"doc://tws-ios.TWS/tutorials/TWS/MixAndMatch#Mix-Match":{"type":"section","role":"pseudoSymbol","kind":"section","url":"\/tutorials\/tws\/mixandmatch#Mix-Match","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch#Mix-Match","title":"Mix & Match","abstract":[{"type":"text","text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, you’ll need to follow specific rules and best practices."}]},"MixAndMatch_00.swift":{"identifier":"MixAndMatch_00.swift","content":["import SwiftUI","import TWS","","@main","struct TWSDemoApp: App {","","    var body: some Scene {","        WindowGroup {","            HomeView()","                .twsEnable(configuration: TWSBasicConfiguration(","                    id: \"<PROJECT_ID>\"","                ))","        }","    }","}"],"fileType":"swift","fileName":"App.swift","type":"file","syntax":"swift","highlights":[]},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents":{"role":"overview","kind":"overview","abstract":[{"text":"Follow the tutorials to learn how to use the SDK for displaying snippets.","type":"text"}],"type":"topic","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents","title":"Getting Started","url":"\/tutorials\/tutorial-table-of-contents"},"MixAndMatch_03.swift":{"content":["import SwiftUI","import TWS","","struct HomeView: View {","","    @Environment(TWSManager.self) var tws","","    var  body: some View {","        TabView {","            ForEach(tws.snippets()) { snippet in","                RemoteSnippetTab(snippet: snippet)","            }","        }","    }","}","","struct RemoteSnippetTab: View {","","    let snippet: TWSSnippet","","    var body: some View {","        VStack {","            TWSView(snippet: snippet)","","            DevelopmentView(id: snippet.id)","                .twsLocal()","        }","    }","}","","struct DevelopmentView: View {","","    let id: String","","    var body: some View {","        TWSView(","            \/\/ A local snippet","            snippet: .init(","                id: id,","                target: URL(string: \"https:\/\/dev.tws.io?id=\\(id)\")","            )","        )","    }","}"],"identifier":"MixAndMatch_03.swift","fileName":"HomeView.swift","highlights":[{"line":26}],"syntax":"swift","type":"file","fileType":"swift"}}}