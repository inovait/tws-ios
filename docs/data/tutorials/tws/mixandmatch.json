{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/tutorials\/tws\/mixandmatch"]}],"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"project","sections":[{"kind":"hero","title":"Combine remote and local snippets","estimatedTimeInMinutes":5,"chapter":"Display your first snippet","content":[{"type":"paragraph","inlineContent":[{"text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, you’ll need to follow specific rules and best practices.","type":"text"}]},{"type":"aside","name":"Note","content":[{"inlineContent":[{"text":"If you are exclusively using either remote or local handling for snippets, these additional considerations are not necessary.","type":"text"}],"type":"paragraph"}],"style":"note"}]},{"kind":"tasks","tasks":[{"title":"Mix & Match","contentSection":[{"kind":"contentAndMedia","content":[{"type":"paragraph","inlineContent":[{"text":"Let’s begin by displaying a few remote snippets, then integrate some local snippets, and finally switch back to remote ones.","type":"text"}]}],"mediaPosition":"trailing"}],"stepsSection":[{"type":"step","content":[{"inlineContent":[{"type":"text","text":"Start by enabling TWS by providing the Project identifiers."}],"type":"paragraph"}],"media":null,"runtimePreview":null,"caption":[],"code":"MixAndMatch_00.swift"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Show all of the remote snippets in the "},{"type":"codeVoice","code":"TabView"},{"type":"text","text":"."}]}],"media":null,"runtimePreview":null,"caption":[],"code":"MixAndMatch_01.swift"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Now, let’s imagine there is a developer tool hosted on a specific site that allows us to control a snippet, but this tool is not returned from the server. In this case, we can pair the snippet with the developer tool by displaying them side-by-side. This approach allows developers to interact with and control the snippet in real time while viewing it within the application."}]}],"media":null,"runtimePreview":null,"caption":[],"code":"MixAndMatch_02.swift"},{"type":"step","content":[{"inlineContent":[{"text":"Because the manager is injected into the view and all its ancestor views, the SDK assumes that the snippet should be handled in correspondence with the remotely hosted snippet. To override this behavior, we need to explicitly inform the system that we are taking over from this point forward.","type":"text"}],"type":"paragraph"}],"media":null,"runtimePreview":null,"caption":[{"name":"Note","content":[{"inlineContent":[{"type":"text","text":"Once you take over, all ancestor views are treated as local snippets. If you need to use remote snippets again, you must call "},{"code":".twsLocal(false)","type":"codeVoice"},{"type":"text","text":" to restore the default behavior."}],"type":"paragraph"}],"type":"aside","style":"note"}],"code":"MixAndMatch_03.swift"},{"type":"step","content":[{"type":"paragraph","inlineContent":[{"text":"Now, if we want to use remote snippets again, we’ll need to switch back to remote handling.","type":"text"}]}],"media":null,"runtimePreview":null,"caption":[],"code":"MixAndMatch_04.swift"}],"anchor":"Mix-Match"}]},{"abstract":[{"type":"text","text":"Learn how to customize your view to fit your applications profile."},{"type":"text","text":" "},{"type":"text","text":"Customize loading, preloading and error views."}],"kind":"callToAction","featuredEyebrow":"Tutorial","title":"Customize views to fit your application","action":{"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews","type":"reference","isActive":true,"overridingTitle":"Get started","overridingTitleInlineContent":[{"type":"text","text":"Get started"}]}}],"metadata":{"category":"Learn to use the SDK","title":"Combine remote and local snippets","categoryPathComponent":"Tutorial-Table-of-Contents","role":"project"},"hierarchy":{"paths":[["doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents","doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/$volume","doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet"],["doc:\/\/tws-ios.TWS\/documentation\/TWS"]],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents","modules":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet","projects":[{"sections":[{"kind":"task","reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet#Displaying-a-Snippet"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet"},{"sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet#Connect-with-the-TWS-portal","kind":"task"},{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet#Presenting-snippets","kind":"task"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet"},{"sections":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch#Mix-Match","kind":"task"}],"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch"}]},{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Customizing-TWSView","projects":[{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews","sections":[{"kind":"task","reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews#Custom-loading-and-error-views"}]},{"reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomInterceptor","sections":[{"kind":"task","reference":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomInterceptor#Custom-interceptors"}]}]}]},"references":{"doc://tws-ios.TWS/tutorials/TWS/CustomInterceptor":{"url":"\/tutorials\/tws\/custominterceptor","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomInterceptor","abstract":[{"text":"Learn how to intercept desired URLs and use them in native flows","type":"text"}],"title":"Intercepting URL requests","estimatedTime":"5min","kind":"project","type":"topic","role":"project"},"doc://tws-ios.TWS/tutorials/TWS/MixAndMatch":{"type":"topic","abstract":[{"text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, you’ll need to follow specific rules and best practices.","type":"text"}],"url":"\/tutorials\/tws\/mixandmatch","kind":"project","title":"Combine remote and local snippets","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch","role":"project","estimatedTime":"5min"},"doc://tws-ios.TWS/tutorials/TWS/CustomizingViews#Custom-loading-and-error-views":{"abstract":[{"type":"text","text":"Learn how to customize your view to fit your applications profile."},{"type":"text","text":" "},{"type":"text","text":"Customize loading, preloading and error views."}],"url":"\/tutorials\/tws\/customizingviews#Custom-loading-and-error-views","type":"section","title":"Custom loading and error views","kind":"section","role":"pseudoSymbol","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews#Custom-loading-and-error-views"},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents/Customizing-TWSView":{"kind":"article","title":"Customizing TWSView","role":"article","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Customizing-TWSView","type":"topic","abstract":[],"url":"\/tutorials\/tutorial-table-of-contents\/customizing-twsview"},"MixAndMatch_01.swift":{"content":["import SwiftUI","import TWS","","struct HomeView: View {","","    @Environment(TWSManager.self) var tws","","    var  body: some View {","        TabView {","            ForEach(tws.snippets()) { snippet in","                RemoteSnippetTab(snippet: snippet)","            }","        }","    }","}","","struct RemoteSnippetTab: View {","","    let snippet: TWSSnippet","","    var body: some View {","        TWSView(snippet: snippet)","    }","}"],"fileType":"swift","fileName":"HomeView.swift","highlights":[],"type":"file","identifier":"MixAndMatch_01.swift","syntax":"swift"},"MixAndMatch_00.swift":{"content":["import SwiftUI","import TWS","","@main","struct TWSDemoApp: App {","","    var body: some Scene {","        WindowGroup {","            HomeView()","                .twsEnable(configuration: TWSBasicConfiguration(","                    id: \"<PROJECT_ID>\"","                ))","        }","    }","}"],"fileType":"swift","fileName":"App.swift","highlights":[],"type":"file","identifier":"MixAndMatch_00.swift","syntax":"swift"},"doc://tws-ios.TWS/tutorials/TWS/CustomInterceptor#Custom-interceptors":{"url":"\/tutorials\/tws\/custominterceptor#Custom-interceptors","kind":"section","title":"Custom interceptors","type":"section","abstract":[{"text":"Learn how to intercept desired URLs and use them in native flows","type":"text"}],"role":"pseudoSymbol","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomInterceptor#Custom-interceptors"},"doc://tws-ios.TWS/tutorials/TWS/RemoteSnippet":{"estimatedTime":"3min","type":"topic","abstract":[{"type":"text","text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views."}],"role":"project","title":"Display your first remote snippet","url":"\/tutorials\/tws\/remotesnippet","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet","kind":"project"},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents":{"kind":"overview","title":"Getting Started","abstract":[{"type":"text","text":"Follow the tutorials to learn how to use the SDK for displaying snippets."}],"url":"\/tutorials\/tutorial-table-of-contents","type":"topic","role":"overview","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents"},"doc://tws-ios.TWS/tutorials/TWS/RemoteSnippet#Connect-with-the-TWS-portal":{"title":"Connect with the TWS portal","type":"section","url":"\/tutorials\/tws\/remotesnippet#Connect-with-the-TWS-portal","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet#Connect-with-the-TWS-portal","role":"pseudoSymbol","abstract":[{"type":"text","text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views."}],"kind":"section"},"doc://tws-ios.TWS/tutorials/TWS/LocalSnippet#Displaying-a-Snippet":{"title":"Displaying a Snippet","type":"section","kind":"section","abstract":[{"text":"Learn how to work with TWS snippets locally without connecting to our backend service. This tutorial will guide you through the steps to display a webpage snippet in your app, bypassing the backend, and focusing solely on rendering and showcasing the snippet content.","type":"text"}],"identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet#Displaying-a-Snippet","url":"\/tutorials\/tws\/localsnippet#Displaying-a-Snippet","role":"pseudoSymbol"},"doc://tws-ios.TWS/tutorials/TWS/CustomizingViews":{"title":"Customize views to fit your application","type":"topic","abstract":[{"type":"text","text":"Learn how to customize your view to fit your applications profile."},{"type":"text","text":" "},{"type":"text","text":"Customize loading, preloading and error views."}],"estimatedTime":"3min","kind":"project","url":"\/tutorials\/tws\/customizingviews","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/CustomizingViews","role":"project"},"doc://tws-ios.TWS/tutorials/TWS/RemoteSnippet#Presenting-snippets":{"title":"Presenting snippets","role":"pseudoSymbol","url":"\/tutorials\/tws\/remotesnippet#Presenting-snippets","type":"section","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/RemoteSnippet#Presenting-snippets","abstract":[{"text":"Learn how to set up a manager to handle the logic and functionality of your snippets, as well as how to seamlessly integrate them into your SwiftUI views.","type":"text"}],"kind":"section"},"doc://tws-ios.TWS/tutorials/Tutorial-Table-of-Contents/Display-your-first-snippet":{"type":"topic","kind":"article","title":"Display your first snippet","abstract":[],"role":"article","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/Tutorial-Table-of-Contents\/Display-your-first-snippet","url":"\/tutorials\/tutorial-table-of-contents\/display-your-first-snippet"},"doc://tws-ios.TWS/tutorials/TWS/MixAndMatch#Mix-Match":{"url":"\/tutorials\/tws\/mixandmatch#Mix-Match","kind":"section","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/MixAndMatch#Mix-Match","role":"pseudoSymbol","title":"Mix & Match","type":"section","abstract":[{"text":"Once you start mixing remote and local snippets, there are a few important considerations to keep in mind. Since the manager is injected into the environment, it can be accessed from anywhere in the app. However, this setup assumes that snippets are handled remotely. To successfully work with both remote and local snippets, you’ll need to follow specific rules and best practices.","type":"text"}]},"doc://tws-ios.TWS/tutorials/TWS/LocalSnippet":{"kind":"project","identifier":"doc:\/\/tws-ios.TWS\/tutorials\/TWS\/LocalSnippet","role":"project","estimatedTime":"2min","url":"\/tutorials\/tws\/localsnippet","type":"topic","abstract":[{"type":"text","text":"Learn how to work with TWS snippets locally without connecting to our backend service. This tutorial will guide you through the steps to display a webpage snippet in your app, bypassing the backend, and focusing solely on rendering and showcasing the snippet content."}],"title":"Display your first local snippet"},"MixAndMatch_02.swift":{"syntax":"swift","identifier":"MixAndMatch_02.swift","content":["import SwiftUI","import TWS","","struct HomeView: View {","","    @Environment(TWSManager.self) var tws","","    var  body: some View {","        TabView {","            ForEach(tws.snippets()) { snippet in","                RemoteSnippetTab(snippet: snippet)","            }","        }","    }","}","","struct RemoteSnippetTab: View {","","    let snippet: TWSSnippet","","    var body: some View {","        VStack {","            TWSView(snippet: snippet)","","            DevelopmentView(id: snippet.id)","        }","    }","}","","struct DevelopmentView: View {","","    let id: String","","    var body: some View {","        TWSView(","            \/\/ A local snippet","            snippet: .init(","                id: id,","                target: URL(string: \"https:\/\/dev.tws.io?id=\\(id)\")","            )","        )","    }","}"],"fileName":"HomeView.swift","type":"file","highlights":[{"line":22},{"line":23},{"line":24},{"line":25},{"line":26},{"line":29},{"line":30},{"line":31},{"line":32},{"line":33},{"line":34},{"line":35},{"line":36},{"line":37},{"line":38},{"line":39},{"line":40},{"line":41},{"line":42},{"line":43}],"fileType":"swift"},"MixAndMatch_03.swift":{"content":["import SwiftUI","import TWS","","struct HomeView: View {","","    @Environment(TWSManager.self) var tws","","    var  body: some View {","        TabView {","            ForEach(tws.snippets()) { snippet in","                RemoteSnippetTab(snippet: snippet)","            }","        }","    }","}","","struct RemoteSnippetTab: View {","","    let snippet: TWSSnippet","","    var body: some View {","        VStack {","            TWSView(snippet: snippet)","","            DevelopmentView(id: snippet.id)","                .twsLocal()","        }","    }","}","","struct DevelopmentView: View {","","    let id: String","","    var body: some View {","        TWSView(","            \/\/ A local snippet","            snippet: .init(","                id: id,","                target: URL(string: \"https:\/\/dev.tws.io?id=\\(id)\")","            )","        )","    }","}"],"fileType":"swift","fileName":"HomeView.swift","highlights":[{"line":26}],"type":"file","identifier":"MixAndMatch_03.swift","syntax":"swift"},"MixAndMatch_04.swift":{"highlights":[{"line":43},{"line":44},{"line":45},{"line":46}],"syntax":"swift","type":"file","fileType":"swift","content":["import SwiftUI","import TWS","","struct HomeView: View {","","    @Environment(TWSManager.self) var tws","","    var  body: some View {","        TabView {","            ForEach(tws.snippets()) { snippet in","                RemoteSnippetTab(snippet: snippet)","            }","        }","    }","}","","struct RemoteSnippetTab: View {","","    let snippet: TWSSnippet","","    var body: some View {","        VStack {","            TWSView(snippet: snippet)","","            DevelopmentView(id: snippet.id)","                .twsLocal()","        }","    }","}","","struct DevelopmentView: View {","","    let id: String","","    var body: some View {","        TWSView(","            \/\/ A local snippet","            snippet: .init(","                id: id,","                target: URL(string: \"https:\/\/dev.tws.io?id=\\(id)\")","            )","        )","","        \/\/ Some view where we want to use remote snippets again","        SomeView()","            .twsLocal(false)","    }","}"],"identifier":"MixAndMatch_04.swift","fileName":"HomeView.swift"}}}