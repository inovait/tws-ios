name: Release Build
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build_release:
    concurrency:
      group: release-${{ github.ref }}
    name: Build
    runs-on: "self-hosted-mac"
    steps:
      - name: Validate xcode version
        run: |
          XCODE_VERSION=$(/usr/bin/xcodebuild -version 2>/dev/null | head -1)
          echo ${XCODE_VERSION}
          if [ "$XCODE_VERSION" == "Xcode 16.1" ]
          then
              echo "Version up to date"
          else
              echo "wrong version"
              exit 1
          fi

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ssh-key: ${{ secrets.DEPLOY_KEY }}
          
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - uses: jdx/mise-action@v2
        with:
          log_level: debug

      - name: Read Version from version.txt
        id: version
        run: |
          VERSION=$(cat version.txt)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "tag=v$VERSION" >> $GITHUB_OUTPUT

      - name: Update App Version
        run: |
          NEW_VERSION="0.1.${{ github.run_number }}"
          echo "MARK_VERSION=${NEW_VERSION}" >> $GITHUB_ENV
          echo "BUILD_NUMBER=1"  >> $GITHUB_ENV
          echo "MARK_VERSION=${NEW_VERSION}, BUILD_NUMBER=${BUILD_NUMBER}"

      - name: "Install certificates and provision profiles, Build staging"
        env:
          BUILD_CERTIFICATE_BASE64: ${{ secrets.BUILD_CERTIFICATE_BASE64 }}
          KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
          CERTIFICATE_PASSWORD: ${{ secrets.CERTIFICATE_PASSWORD }}
          API_KEY_JSON: ${{ secrets.API_KEY_JSON }}
        run: |
          export KEYCHAIN_PATH=app-signing.keychain-db
          export CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          export API_JSON=$API_KEY_JSON

          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH

      - name: "Generate changelog"
        uses: pmuraus/spotlight-changelog-generator-action@main
        with:
          jiraBaseUrl: https://inova-it.atlassian.net/

      - name: Upload build
        uses: pmuraus/spotlight-upload-action@main
        with:
          buildName: "iOS Release"
          buildVersion: "${{env.VERSION}}"
          files: "./Changelog.md"
          apiKey: ${{secrets.SPOTLIGHT_KEY}}
          
      - name: Create Git Tag
        run: |
          git tag $VERSION
          git push origin $VERSION
          
      - name: Read Changelog for Latest Release Notes
        id: changelog
        run: |
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          cat Changelog.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: Release ${{ steps.version.outputs.tag }}
          body: ${{ steps.changelog.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Transition ticket to Done
        uses: pmuraus/jira-ticket-transition-action@main
        with:
          targetTransition: "Done"
          sourceTransition: "Verified"
          message: Available in release ${{ steps.version.outputs.tag }}
          jiraBaseUrl: "inova-it.atlassian.net"
          jiraEmail: "hudson@inova.si"
          jiraToken: ${{secrets.JIRA_TOKEN}}
          githubToken: ${{secrets.GITHUB_TOKEN}}
